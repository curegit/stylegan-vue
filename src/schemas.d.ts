/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export declare global {
  type paths = {
    "/": {
      /** Hello */
      get: operations["hello__get"];
    };
    "/list": {
      /** Model List */
      get: operations["model_list_list_get"];
    };
    "/models": {
      /** Model Specs */
      get: operations["model_specs_models_get"];
    };
    "/{model}/random": {
      /** Generate */
      get: operations["generate__model__random_get"];
    };
    "/{model}/generate": {
      /** Generate */
      get: operations["generate__model__generate_get"];
      /** Generate */
      post: operations["generate__model__generate_post"];
    };
    "/{model}/blend": {
      /** Blend */
      post: operations["blend__model__blend_post"];
    };
    "/{model}/mix": {
      /** Mix */
      post: operations["mix__model__mix_post"];
    };
  };

  type webhooks = Record<string, never>;

  interface components {
    schemas: {
      /** HTTPValidationError */
      HTTPValidationError: {
        /** Detail */
        detail?: components["schemas"]["ValidationError"][];
      };
      /** Model */
      Model: {
        /** Id */
        id: string;
        /** Name */
        name: string;
        /** Description */
        description: string;
        /** Conditional */
        conditional: boolean;
        /** Labels */
        labels?: string[];
        /** Width */
        width: number;
        /** Height */
        height: number;
      };
      /** ValidationError */
      ValidationError: {
        /** Location */
        loc: (string | number)[];
        /** Message */
        msg: string;
        /** Error Type */
        type: string;
      };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
  }

  type external = Record<string, never>;

  interface operations {
    hello__get: {
      /** Hello */
      responses: {
        /** @description Successful Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
    model_list_list_get: {
      /** Model List */
      responses: {
        /** @description Successful Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
    model_specs_models_get: {
      /** Model Specs */
      responses: {
        /** @description Successful Response */
        200: {
          content: {
            "application/json": {
              [key: string]: components["schemas"]["Model"] | undefined;
            };
          };
        };
      };
    };
    generate__model__random_get: {
      /** Generate */
      parameters: {
        query?: {
          psi?: number;
        };
        path: {
          model: string;
        };
      };
      responses: {
        /** @description Successful Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Validation Error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
    generate__model__generate_get: {
      /** Generate */
      parameters: {
        query?: {
          psi?: number;
        };
        path: {
          model: string;
        };
      };
      responses: {
        /** @description Successful Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Validation Error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
    generate__model__generate_post: {
      /** Generate */
      parameters: {
        query?: {
          psi?: number;
        };
        path: {
          model: string;
        };
      };
      responses: {
        /** @description Successful Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Validation Error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
    blend__model__blend_post: {
      /** Blend */
      parameters: {
        path: {
          model: string;
        };
      };
      responses: {
        /** @description Successful Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Validation Error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
    mix__model__mix_post: {
      /** Mix */
      parameters: {
        path: {
          model: string;
        };
      };
      responses: {
        /** @description Successful Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Validation Error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
  }
}
